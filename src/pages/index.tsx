import Head from "next/head";
import { atom, selector, useRecoilValue } from "recoil";
import { Suspense, useEffect, useState } from "react";

const currentUserIDState = atom({
  key: "CurrentUserID",
  default: 1,
});

const currentUserNameQuery = selector({
  key: "CurrentUserName",
  get: async ({ get }) => {
    const response = await fetch(
      `https://jsonplaceholder.typicode.com/users/${get(currentUserIDState)}`
    );
    // 3秒遅延
    await new Promise((resolve) => setTimeout(resolve, 3000));
    return response.json().then((json) => json.name);
  },
});

const CurrentUserName = () => {
  const userName = useRecoilValue(currentUserNameQuery);
  return <div>{userName}</div>;
};

export default function Home() {
  // MEMO: クライアント側だけで実行したい場合はコメントアウトを外す
  // const [isClient, setIsClient] = useState(false);
  // useEffect(() => {
  //   setIsClient(true);
  // }, []);

  return (
    <>
      <Head>
        <title>Next.js Recoil Suspense</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {/* {isClient && ( */}
        <Suspense fallback={<div>Loading...</div>}>
          <CurrentUserName />
        </Suspense>
        {/* )} */}
      </main>
    </>
  );
}
